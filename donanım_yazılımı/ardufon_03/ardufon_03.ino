/*
 Name:		Sketch1.ino
 Created:	11.11.2023 18:07:28
 Author:	emirh
*/
#include <avr/pgmspace.h>
 uint8_t anaekran1 [] PROGMEM = {
	// 'ardufon_anaekran1, 128x64px
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xe3, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xc3, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xc7, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xc7, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0x87, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0x8f, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0x8f, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0x88, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0x88, 0xf8, 0xe3, 0xc0, 0x1c, 0x78, 0x80, 0x40, 0x1e, 0x38, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0x18, 0xf0, 0x03, 0x00, 0x18, 0x70, 0x80, 0x80, 0x0c, 0x00, 0x7f, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0x18, 0xf0, 0x03, 0x00, 0x38, 0xf1, 0x80, 0x80, 0x1c, 0x00, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xfe, 0x30, 0xf0, 0x43, 0x1c, 0x38, 0xf1, 0xc7, 0x8e, 0x1c, 0x10, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xfe, 0x31, 0xe1, 0xc6, 0x1c, 0x30, 0xe1, 0xc7, 0x0e, 0x18, 0x70, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xfc, 0x71, 0xe3, 0x86, 0x3c, 0x71, 0xe3, 0x87, 0x1e, 0x38, 0xf1, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xfc, 0x71, 0xe3, 0x86, 0x38, 0x71, 0xe3, 0x8f, 0x1c, 0x38, 0xe1, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xf8, 0xf1, 0xc3, 0xfc, 0x38, 0x61, 0xc3, 0x8e, 0x1c, 0x30, 0xe1, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xf0, 0x01, 0xc7, 0xfc, 0x78, 0xe3, 0xc7, 0x0e, 0x3c, 0x71, 0xe3, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xf0, 0x01, 0xc7, 0xfc, 0x70, 0xe3, 0xc7, 0x1e, 0x38, 0x61, 0xc3, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xe0, 0x03, 0x87, 0xf8, 0x70, 0xc3, 0x87, 0x1c, 0x38, 0x61, 0xc3, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xe0, 0x03, 0x8f, 0xf8, 0xe1, 0xc7, 0x8e, 0x1c, 0x78, 0xe3, 0xc7, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xc3, 0xe3, 0x0f, 0xf0, 0xc1, 0xc6, 0x0e, 0x38, 0x70, 0xc3, 0x87, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xc7, 0xc3, 0x0f, 0xf0, 0x01, 0x80, 0x0c, 0x38, 0x00, 0xc3, 0x87, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0x87, 0xc3, 0x1f, 0xf0, 0x03, 0x80, 0x1c, 0x38, 0x01, 0xc7, 0x8f, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0x8f, 0xc2, 0x1f, 0xf0, 0xc3, 0x87, 0x1c, 0x78, 0x03, 0x87, 0x0f, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x7f, 0xff, 0xff, 0x7e, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9e, 0x3f, 0xff, 0xfe, 0x3e, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9c, 0x1f, 0xff, 0xfc, 0x1e, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9e, 0x3f, 0xff, 0xfe, 0x3e, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x7f, 0xff, 0xff, 0x7e, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf0, 0x00, 0x07, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xfb, 0xff, 0xef, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xfd, 0xff, 0xdf, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xfe, 0x00, 0x3f, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
#include <OLED_I2C.h>
#include "degerler.h"
OLED ekran(SDA, SCL);
extern uint8_t SmallFont[];
extern uint8_t MediumNumbers[];
extern uint8_t TinyFont[];
extern uint8_t anaekran1[];
String kullanici = "Emirhan Ozcelik";
String anim1_goz[] = { "*  *","^  ^" };

unsigned long gecen_zaman = 0;
uint8_t snn = 0;
uint8_t sn = 0;
uint8_t dk = 21;
uint8_t saat = 14;
uint8_t buton_takip = 0;

int16_t ekran_num = 0; // 0=ana ekran , 1=saatekran , 2=pilekran ,3=rehber ...
const int sayfamax = 2; // 0 1 2 �� ekran i�in maksimum kontrol say�s�

void setup() {
	Serial.begin(9600);
	if (!ekran.begin(SSD1306_128X64))
		while (1);
	pinMode(2, INPUT_PULLUP);
	pinMode(4, INPUT_PULLUP);
	pinMode(7, INPUT_PULLUP);
	pinMode(8, INPUT_PULLUP);
	//yukleniyor("Hosgeldiniz", kullanici);
}

void loop()
{
	if (millis() - 500 > gecen_zaman)
	{
		snn++;
		sn = sn + snn % 2;
		buton_takip = 0;
		gecen_zaman = millis();
		Saat();
		ekran_guncelle(ekran_num);
	}
		uint16_t x = map(analogRead(A1), 0, 1023, 0, 5); // min=0,orta=2,max=4
		uint16_t y = map(analogRead(A0), 0, 1023, 0, 5); //tu�lar aktifken de�er =
		/*uint8_t tsl = digitalRead(2); //sol
		uint8_t tsg = digitalRead(4); //sa�
		uint8_t tas = digitalRead(7); //a�a��
		uint8_t tyk = digitalRead(8); //yukar�*/
		if (x == 0 && buton_takip == 0)
		{
			buton_takip++;
			ekran_num++;
			if (ekran_num > sayfamax) { ekran_num = 0; }
			ekran.clrScr();
		}
		else if (x == 4 && buton_takip == 0)
		{
			buton_takip++;
			ekran_num--;
			if (ekran_num < 0) { ekran_num = sayfamax; }
			ekran.clrScr();
		}

}
void ekran_guncelle(byte a)
{
	if (a == 0) { anaekran(); }
	else if (a == 1) { saatekran(); }
	else if (a == 2) { pilekran(); }
	ekran.update();
}
void yukleniyor(String s, String user)
{
	ekran.setFont(SmallFont);
	ekran.clrScr();
	ekran.print(user, CENTER, 2);
	ekran.print(s, CENTER, 18);
	for (int a = 0; a < 4; a++)
	{
		for (int i = 0; i < 2; i++)
		{
			ekran.print(anim1_goz[i], CENTER, 40);
			ekran.print("-", CENTER, 54);
			delay(500);
			ekran.update();
		}
	}
	ekran.clrScr();
	ekran.update();
}
void Saat()
{
	if (sn >= 60)
	{
		sn = 0; dk++; ekran.clrScr();
		if (dk >= 60)
		{
			sn = 0; dk = 0; saat++;
			if (saat >= 24) { sn = 0; dk = 0; saat = 0; }
		}
	}
}
void anaekran()
{
	ekran.setFont(SmallFont);
	ekran.print(kullanici, LEFT, 11);
	ekran.print("ardufon_02", LEFT, 1);
	ekran.print("gelen arama = ", LEFT, 31);
	ekran.print("gelen mesaj = ", LEFT, 51);
	ekran.printNumF(0, 0, 100, 31);
	ekran.printNumF(0, 0, 100, 51);
}
void saatekran()
{
	ekran.setFont(SmallFont);
	ekran.print("SAAT", CENTER, 10);
	ekran.setFont(MediumNumbers);
	ekran.printNumF(saat, 0, 10, 40);
	ekran.printNumF(dk, 0, 50, 40);
	ekran.printNumF(sn, 0, 90, 40);
}
void pilekran()
{
	ekran.drawBitmap(0, 0, anaekran1, 128, 64);
}
